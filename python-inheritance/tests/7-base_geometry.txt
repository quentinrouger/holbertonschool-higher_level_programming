>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> print(bg.area())
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("name", "")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("distance", None)
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("name", 4.2)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("distance", True)
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("name", )
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name", float('inf'))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", float('nan'))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", (1, 2, 3))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", [1, 2, 3])
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", {1, 2, 3})
Traceback (most recent call last):
TypeError: name must be an integer
